// @flow

// Note: `status` is actually a Symbol, but flow doesn't support these. Fake it by declaring it as
// a string constant instead.
declare export var status : '__status__';

export type Status = {
    ready : boolean,
    loading : boolean,
    error : ?Error,
};

export type StatusWithMethods = {
    is : mixed => boolean,
    
    withStatus : Status => LoadableTWithMethods,
    update : Status => LoadableTWithMethods,
    invalidated : () => LoadableTWithMethods,
    asReady : mixed => LoadableTWithMethods,
    asLoading : boolean => LoadableTWithMethods,
    asFailed : Error => LoadableTWithMethods,
};

export type LoadableT = {
    __status__ : Status,
};

export type LoadableTWithMethods = {
    __status__ : StatusWithMethods,
};

declare export function Loadable(item : mixed, status ?: Status) : LoadableTWithMethods;


declare export class LoadError extends Error {
    constructor(reason : mixed, item : Loadable) : LoadError;
}

type Fulfill = (mixed => void, mixed => void) => void;
declare export class LoadablePromise extends Promise {
    //static [Symbol.species] : typeof Promise // Not supported by flow
    
    static from(item : LoadableTWithMethods, promise : typeof Promise) : LoadablePromise;
    
    item : LoadableTWithMethods;
    
    constructor(fulfill : Fulfill, item : LoadableTWithMethods) : LoadablePromise;
    
    subscribe(subscriber : Loadable => void) : LoadablePromise;
}


// TODO: individual loaders
